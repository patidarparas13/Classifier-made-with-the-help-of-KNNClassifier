# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yZNggx61DH0us5-23vikzSfc0TB8PB3x
"""

from scipy.spatial import distance

def euc(a,b):
  return distance.euclidean(a,b)

class Paras_classifier():
  def fit(self,x_train,y_train):
    self.x_train = x_train
    self.y_train = y_train
    
  def predict(self,x_test):
    predictions = []
    for row in x_test:
      label = self.closest(row)
      predictions.append(label)
      
    
    return predictions
  
  def closest(self,row):
    best_dist = euc(row,self.x_train[0])
    best_index = 0
    for i in range(1,len(self.x_train)):
      dis = euc(row,self.x_train[i])
      if dis<best_dis:
        best_dist = dis
        best_index = i
        
    return self.y_train[best_index]      
  
  

from sklearn.datasets import load_iris
iris = load_iris()
x = iris.data
y = iris.target

#cross_validation is changed to model_selection

from sklearn.cross_validation import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.5)

#1 DecisionTreeClassifier

#from sklearn import tree
#my_classifier = tree.DecisionTreeClassifier()


# KNeighborsClassifier
#from sklearn.neighbors import KNeighborsClassifier
my_classifier = Paras_classifier()

my_classifier = my_classifier.fit(x_train,y_train)
prediction = my_classifier.predict(x_test)
print(prediction)

from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,prediction))